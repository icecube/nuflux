[build-system]
build-backend = 'mesonpy'
requires = ['meson-python', 'oldest-supported-numpy']

[project]
name = "nuflux"
dynamic = ["version"]
description = "A library for calculating atmospheric neutrino fluxes"
readme = "README.md"
requires-python = "~=3.7"
dependencies = ['numpy']
license = {file = "LICENSE"}
keywords = ["python", "science", "astronomy", "astrophysics", "IceCube", "atmospheric", "neutrino"]
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: C++',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Topic :: Scientific/Engineering :: Astronomy',
    'Topic :: Scientific/Engineering :: Physics',
    ]

[project.urls]
Documentation = "https://docs.icecube.aq/nuflux/main/"
Source = "https://github.com/icecube/nuflux"
Collaboration = "https://icecube.wisc.edu/"
doi = "https://doi.org/10.5281/zenodo.8180337"

[project.optional-dependencies]
test = ["pytest","pytest-subtests"]
dev = ["tbump"]

[tool.meson-python.args]
setup = ['-Dpymodule=true']

[tool.pytest.ini_options]
addopts = "--doctest-glob='README.md'"
testpaths = ["tests", "README.md"]

[tool.cibuildwheel]
build = "cp3{7,8,9,10,11,12}-manylinux_x86_64"
manylinux-x86_64-image = "kjmeagher/nuflux-manylinux2014_x86_64"
test-extras = ["test"]
test-command = "{project}/tests/test_fluxes.py"

[tool.tbump]
github_url = "https://github.com/icecube/nuflux"

[tool.tbump.version]
current = "2.0.5"
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "meson.build"
search = "version: '{current_version}'"

[[tool.tbump.file]]
src = "CITATION.cff"
search = "version: {current_version}"

[[tool.tbump.before_commit]]
name = "Update release date in citation file"
cmd = "sed -i '' \"s/date-released: .*$/date-released: $(date -uI)/\" CITATION.cff"

[tool.codespell]
skip = '*.pdf,*.dat,*.fits'
ignore-words-list = 'nd'

[tool.doc8]
max-line-length=128
