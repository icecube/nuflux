name: Tests
on:
  push:
    branches: 
      - main
  pull_request: 
jobs:
  Tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build: [meson, setuptools]
        include:
          - os: ubuntu-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.11"
    steps:
      - name: Checkout nuflux
        uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Apt-Get Install Dependencies
        if: startsWith( matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build gcovr libcfitsio-dev python-is-python3 libboost-python-dev doxygen
          curl -L https://github.com/icecube/photospline/archive/refs/tags/v2.1.0.tar.gz | tar xz
          cmake -S photospline-2.1.0 -B photospline -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr
          sudo make install -C photospline
      - name: HomeBrew Install Dependencies
        if: startsWith( matrix.os, 'macos') 
        run: |
          brew tap icecube/icecube
          brew install boost-python3 ninja doxygen cfitsio gcovr icecube/icecube/photospline
      - name: Build nuflux with setuptools
        if: matrix.build == 'setuptools'
        run: |
          python3 -m pip install .[test]
          python3 -m doctest -v README.md
          ./tests/test_fluxes.py
      - name: Build nuflux with Meson
        if: matrix.build == 'meson'
        run: |
          python3 -m pip install meson numpy
          meson setup build . -D b_coverage=true
          ninja -C build test
      - name: Generate Coverage Report and Docs
        if: matrix.build == 'meson' && startsWith( matrix.os, 'ubuntu')
        run: |
          ninja -C build coverage
          python3 -m pip install sphinx breathe sphinx_rtd_theme
          ninja -C build docs/html
      - name: Upload Coverage to Codecov
        if: matrix.build == 'meson' && startsWith( matrix.os, 'ubuntu')
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
          verbose: true
      - name: Upload Documentation
        if: matrix.build == 'meson' && startsWith( matrix.os, 'ubuntu') && github.ref == 'refs/heads/main'
        run: docs/docs-upload.sh
        env:
          ICECUBE_PASSWORD: ${{ secrets.ICECUBE_PASSWORD }}
