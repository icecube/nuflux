name: Tests
on:
  push:
    branches: 
      - main
  pull_request: 
jobs:
  Tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build: ["meson", "setuptools"]
    steps:
      - name: Apt-Get Install Dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build gcovr libcfitsio-dev python-is-python3 libboost-python-dev python3-numpy doxygen
          python3 -m pip install --user meson sphinx breathe sphinx_rtd_theme
      - name: HomeBrew Install Dependencies
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install boost-python3 ninja doxygen cfitsio gcovr
          python3 -m pip install --user numpy meson sphinx breathe sphinx_rtd_theme
      - name: Checkout Photospline
        uses: actions/checkout@v2
        with:
          repository: icecube/photospline
          ref: v2.0.7
          path: photospline
      - name: Build Photospline
        run: |
          cmake -DCMAKE_INSTALL_PREFIX=/usr .
          make
          sudo make install
        working-directory: photospline
      - name: Checkout nuflux
        uses: actions/checkout@v2
      - name: Build nuflux with Meson
        if: ${{ matrix.build == 'meson' }}
        run: |
          python3 -c 'import numpy; print(numpy.__file__)'
          python3 -c 'import importlib.util,os;print(os.path.join(importlib.util.find_spec("numpy").submodule_search_locations[0],"core","include"))'
          ls -l ${HOME}/.local/bin || true
          ${HOME}/.local/bin/meson build . -D b_coverage=true
          ninja -C build
          sudo ninja -C build install
      - name: Build nuflux with setuptools
        if: ${{ matrix.build == 'setuptools' }}
        run: python3 -m pip install --user .
      - name: Run Python Tests
        working-directory: tests        
        env:
          LD_LIBRARY_PATH: /usr/local/lib/:/usr/local/lib/x86_64-linux-gnu
          PYTHONPATH: /usr/local/lib/python3/dist-packages
        run: |
          ls -l /usr/lib/libphotospline* /usr/local/lib/libphotospline* || true
          python3 -m site
          ./test_fluxes.py
          python3 -m doctest -v ../README.md
      - name: Generate Coverage Report
        if: ${{ matrix.build == 'meson' && matrix.os == 'ubuntu-latest' }}
        run: ninja -C build coverage
      - name: Upload Coverage to Codecov
        if: ${{ matrix.build == 'meson' && matrix.os == 'ubuntu-latest' }}
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
          verbose: true
      - name: Build Documentation
        if: ${{ matrix.build == 'meson' }}
        run: ninja -C build docs/html
        env:
          LD_LIBRARY_PATH: /usr/local/lib/:/usr/local/lib/x86_64-linux-gnu
          PYTHONPATH: /usr/local/lib/python3/dist-packages
      - name: Upload Documentation
        if: ${{ matrix.build == 'meson' &&  matrix.os == 'ubuntu-latest' }}
        run: docs/docs-upload.sh
        env:
          ICECUBE_PASSWORD: ${{ secrets.ICECUBE_PASSWORD }}
      - name: Check Documentation Links
        if: ${{ matrix.build == 'meson' }}
        run: sphinx-build -c build/docs/ docs/ . -b linkcheck
        env:
          LD_LIBRARY_PATH: /usr/local/lib/:/usr/local/lib/x86_64-linux-gnu
          PYTHONPATH: /usr/local/lib/python3/dist-packages
